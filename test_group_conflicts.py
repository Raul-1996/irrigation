#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º –ø–æ –≥—Ä—É–ø–ø–∞–º
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –º–µ–∂–¥—É –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏,
–∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∑–æ–Ω—ã –∏–∑ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø—ã –≤ –ø–µ—Ä–µ—Å–µ–∫–∞—é—â–µ–µ—Å—è –≤—Ä–µ–º—è
"""

import sys
import os
import json
import tempfile
import shutil
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from database import IrrigationDB

def test_group_conflicts():
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –ø–æ –≥—Ä—É–ø–ø–∞–º"""
    print("üß™ –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º –ø–æ –≥—Ä—É–ø–ø–∞–º")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    temp_dir = tempfile.mkdtemp()
    db_path = os.path.join(temp_dir, 'test_irrigation.db')
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        db = IrrigationDB(db_path)
        db.init_database()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≥—Ä—É–ø–ø—É (–≥—Ä—É–ø–ø–∞ 1 - –ì–∞–∑–æ–Ω)
        group_id = 1
        print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≥—Ä—É–ø–ø—É: –ì–∞–∑–æ–Ω (ID: {group_id})")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–æ–Ω—ã –∏–∑ –≥—Ä—É–ø–ø—ã 1
        zones = []
        for i in range(1, 4):  # –ó–æ–Ω—ã 1, 2, 3
            zone = db.get_zone(i)
            if zone:
                zones.append(zone)
                print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–æ–Ω—É: {zone['name']} (ID: {zone['id']})")
            else:
                print(f"‚ùå –ó–æ–Ω–∞ {i} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return False
        
        # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É (–∑–æ–Ω—ã 1 –∏ 2)
        program1_data = {
            'name': '–ü—Ä–æ–≥—Ä–∞–º–º–∞ 1',
            'time': '08:00',
            'days': ['–ü–Ω', '–í—Ç', '–°—Ä'],
            'zones': [zones[0]['id'], zones[1]['id']]  # –ó–æ–Ω—ã 1 –∏ 2
        }
        program1 = db.create_program(program1_data)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ 1: {program1['name']} (ID: {program1['id']})")
        print(f"   –í—Ä–µ–º—è: {program1['time']}, –ó–æ–Ω—ã: {program1['zones']}")
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É (–∑–æ–Ω—ã 2 –∏ 3) - –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –ø–æ –∑–æ–Ω–µ 2
        program2_data = {
            'name': '–ü—Ä–æ–≥—Ä–∞–º–º–∞ 2',
            'time': '08:05',  # –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π
            'days': ['–ü–Ω', '–í—Ç', '–°—Ä'],
            'zones': [zones[1]['id'], zones[2]['id']]  # –ó–æ–Ω—ã 2 –∏ 3
        }
        program2 = db.create_program(program2_data)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ 2: {program2['name']} (ID: {program2['id']})")
        print(f"   –í—Ä–µ–º—è: {program2['time']}, –ó–æ–Ω—ã: {program2['zones']}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç—Ä–µ—Ç—å—é –ø—Ä–æ–≥—Ä–∞–º–º—É (–∑–æ–Ω–∞ 1) - –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –ø–æ –≥—Ä—É–ø–ø–µ
        program3_data = {
            'name': '–ü—Ä–æ–≥—Ä–∞–º–º–∞ 3',
            'time': '08:10',  # –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π
            'days': ['–ü–Ω', '–í—Ç', '–°—Ä'],
            'zones': [zones[0]['id']]  # –¢–æ–ª—å–∫–æ –∑–æ–Ω–∞ 1
        }
        program3 = db.create_program(program3_data)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ 3: {program3['name']} (ID: {program3['id']})")
        print(f"   –í—Ä–µ–º—è: {program3['time']}, –ó–æ–Ω—ã: {program3['zones']}")
        
        print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤...")
        
        # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –ø–æ –ø–µ—Ä–µ—Å–µ–∫–∞—é—â–∏–º—Å—è –∑–æ–Ω–∞–º
        print("\nüìã –¢–µ—Å—Ç 1: –ö–æ–Ω—Ñ–ª–∏–∫—Ç –ø–æ –ø–µ—Ä–µ—Å–µ–∫–∞—é—â–∏–º—Å—è –∑–æ–Ω–∞–º")
        conflicts1 = db.check_program_conflicts(
            program_id=program1['id'],
            time='08:00',
            zones=[zones[0]['id'], zones[1]['id']],
            days=['–ü–Ω', '–í—Ç', '–°—Ä']
        )
        
        if conflicts1:
            print("‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω (–æ–∂–∏–¥–∞–µ–º–æ)")
            for conflict in conflicts1:
                print(f"   - –ü—Ä–æ–≥—Ä–∞–º–º–∞ {conflict['program_name']} (ID: {conflict['program_id']})")
                print(f"     –ü–µ—Ä–µ—Å–µ–∫–∞—é—â–∏–µ—Å—è –∑–æ–Ω—ã: {conflict['common_zones']}")
                print(f"     –ü–µ—Ä–µ—Å–µ–∫–∞—é—â–∏–µ—Å—è –≥—Ä—É–ø–ø—ã: {conflict['common_groups']}")
        else:
            print("‚ùå –ö–æ–Ω—Ñ–ª–∏–∫—Ç –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω (–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ)")
        
        # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –ø–æ –≥—Ä—É–ø–ø–µ (–±–µ–∑ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è –∑–æ–Ω)
        print("\nüìã –¢–µ—Å—Ç 2: –ö–æ–Ω—Ñ–ª–∏–∫—Ç –ø–æ –≥—Ä—É–ø–ø–µ (–±–µ–∑ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è –∑–æ–Ω)")
        conflicts2 = db.check_program_conflicts(
            program_id=program1['id'],
            time='08:00',
            zones=[zones[0]['id']],  # –¢–æ–ª—å–∫–æ –∑–æ–Ω–∞ 1
            days=['–ü–Ω', '–í—Ç', '–°—Ä']
        )
        
        if conflicts2:
            print("‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç –ø–æ –≥—Ä—É–ø–ø–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω (–æ–∂–∏–¥–∞–µ–º–æ)")
            for conflict in conflicts2:
                print(f"   - –ü—Ä–æ–≥—Ä–∞–º–º–∞ {conflict['program_name']} (ID: {conflict['program_id']})")
                print(f"     –ü–µ—Ä–µ—Å–µ–∫–∞—é—â–∏–µ—Å—è –∑–æ–Ω—ã: {conflict['common_zones']}")
                print(f"     –ü–µ—Ä–µ—Å–µ–∫–∞—é—â–∏–µ—Å—è –≥—Ä—É–ø–ø—ã: {conflict['common_groups']}")
        else:
            print("‚ùå –ö–æ–Ω—Ñ–ª–∏–∫—Ç –ø–æ –≥—Ä—É–ø–ø–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω (–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ)")
        
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –ø—Ä–∏ —Ä–∞–∑–Ω—ã—Ö –¥–Ω—è—Ö
        print("\nüìã –¢–µ—Å—Ç 3: –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –ø—Ä–∏ —Ä–∞–∑–Ω—ã—Ö –¥–Ω—è—Ö")
        conflicts3 = db.check_program_conflicts(
            program_id=program1['id'],
            time='08:00',
            zones=[zones[0]['id'], zones[1]['id']],
            days=['–ß—Ç', '–ü—Ç']  # –î—Ä—É–≥–∏–µ –¥–Ω–∏
        )
        
        if not conflicts3:
            print("‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (–æ–∂–∏–¥–∞–µ–º–æ) - —Ä–∞–∑–Ω—ã–µ –¥–Ω–∏")
        else:
            print("‚ùå –ö–æ–Ω—Ñ–ª–∏–∫—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω (–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ) - —Ä–∞–∑–Ω—ã–µ –¥–Ω–∏")
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –ø—Ä–∏ —Ä–∞–∑–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        print("\nüìã –¢–µ—Å—Ç 4: –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –ø—Ä–∏ —Ä–∞–∑–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
        conflicts4 = db.check_program_conflicts(
            program_id=program1['id'],
            time='10:00',  # –î—Ä—É–≥–æ–µ –≤—Ä–µ–º—è
            zones=[zones[0]['id'], zones[1]['id']],
            days=['–ü–Ω', '–í—Ç', '–°—Ä']
        )
        
        if not conflicts4:
            print("‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (–æ–∂–∏–¥–∞–µ–º–æ) - —Ä–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è")
        else:
            print("‚ùå –ö–æ–Ω—Ñ–ª–∏–∫—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω (–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ) - —Ä–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è")
        
        print("\n" + "=" * 60)
        print("üéâ –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –ø–æ –≥—Ä—É–ø–ø–∞–º –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        return False
        
    finally:
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        if os.path.exists(temp_dir):
            shutil.rmtree(temp_dir)

if __name__ == '__main__':
    success = test_group_conflicts()
    sys.exit(0 if success else 1)
